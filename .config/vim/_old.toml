
# ====================-
# Completion
# ====================-

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
depends = ['roxma/vim-hug-neovim-rpc']
on_i = 1
hook_add = '''
let g:deoplete#enable_at_startup = 1      "enable deoplete at vim startup
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0   "let matcher ignore case
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#enable_fuzzy_completion = 1   "fuzzy match
let g:deoplete#max_list = 1000
let g:deoplete#sources = {}
let g:deoplete#sources._ = ['file', 'neosnippet']
'''
# see https://github.com/Shougo/deoplete.nvim/blob/master/doc/deoplete.txt
hook_post_source = '''
" call deoplete#custom#option('omni_patterns', {'python': '[^. *\t]\.\w*'})
'''

[[plugins]] # カッコの補完など
repo = 'cohama/lexima.vim'
on_i = 1

# ====================-
# Snipetts
# ====================-

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
hook_add = '''

" key mappings
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" Enable snipMate compatibility feature.
let g:neosnippet#enable_snipmate_compatibility = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

# ====================-
# Finder
# ====================-

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
hook_add = '''

" ファイルタイプを変更する
nmap <silent> <C-j><C-t> :<C-u>Denite filetype<CR>
" 同一内検索
nmap <silent> <C-j><C-j> :<C-u>Denite line<CR>
" 全文検索
nmap <silent> <C-j><C-g> :<C-u>Denite grep<CR>
" 全文検索(プレビュー)
nmap <silent> <C-j><C-p> :<C-u>Denite -auto_preview grep<CR>
" ヘルプ
nmap <silent> <C-j><C-h> :<C-u>Denite help<CR>
" コマンド
nmap <silent> <C-j><C-c> :<C-u>Denite command<CR>
" ファイルを開く用(rec: Recursive?)
nmap <silent> <C-j><C-f> :<C-u>Denite file_rec<CR>
" ファイルを開く用(mru: Most Recently Used)
nmap <silent> <C-j><C-u> :<C-u>Denite file_mru<CR>
" ヤンク履歴
nmap <silent> <C-j><C-y> :<C-u>Denite neoyank<CR>
" 前回のDeniteバッファを再表示する
nmap <silent> <C-j><C-r> :<C-u>Denite -resume<CR>
'''
hook_post_source = '''
" interface
call denite#custom#option('default', 'prompt', 'λ>')
call denite#custom#option('default', 'vertical_preview', 0)  " 1にすると左側にプレビューが出現
call denite#custom#option('default', 'short_source_names', 1)

call denite#custom#option('grep', 'empty', 0)
call denite#custom#option('grep', 'vertical_preview', 1)
call denite#custom#option('grep', 'auto_highlight', 1)

call denite#custom#option('list', 'quit', 0)
call denite#custom#option('list', 'mode', 'normal')
call denite#custom#option('list', 'winheight', 8)

" Key mapping
call denite#custom#map('insert', "<Up>", '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', "<Down>", '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<c-j>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<c-k>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<c-n>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<c-p>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<c-u>', '<denite:scroll_up>' , 'noremap')
call denite#custom#map('insert', '<c-d>', '<denite:scroll_down>' , 'noremap')

" tabでアクションはめんどくさいので
call denite#custom#map('insert', '<c-e>', '<denite:do_action:delete>', 'noremap')
call denite#custom#map('insert', '<c-w>', '<denite:do_action:new>', 'noremap')
call denite#custom#map('insert', '<c-t>', '<denite:do_action:tabopen>', 'noremap')
call denite#custom#map('insert', '<c-v>', '<denite:do_action:preview>', 'noremap')
call denite#custom#map('insert', "-", '<denite:do_action:split>')
call denite#custom#map('insert', "|", '<denite:do_action:vsplit>')

" see https://github.com/Shougo/denite.nvim/blob/642b9452a8cef9cb5cd0da9ef17b3da29b6b61a1/rplugin/python3/denite/ui/action.py#L232

'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['denite.vim']

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = ['denite.vim']

# ====================-
# Ctags
# ====================-

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''

" key mapings
nmap <F9> :TagbarToggle<CR>

" It depends package below
" Ctags
" https://github.com/majutsushi/tagbar
" go get -u github.com/jstemmer/gotags

" NOTE:
" + - で開閉する

let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
    \ 'ctype' : 't',
    \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
    \ }
'''

[[plugins]]
repo = 'soramugi/auto-ctags.vim'

# ====================-
# Useful tools
# ====================-

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]] # for searching
repo = 'haya14busa/incsearch.vim'
hook_add = '''
" key mappings
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)
'''

