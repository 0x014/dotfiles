# ====================-
# Completion
# ====================-

# for NVIM
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
depends = ['roxma/vim-hug-neovim-rpc']
on_i = 1
hook_add = '''
let g:deoplete#enable_at_startup = 1      "enable deoplete at vim startup
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0   "let matcher ignore case
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#enable_fuzzy_completion = 1   "fuzzy match
let g:deoplete#max_list = 1000
let g:deoplete#sources = {}
let g:deoplete#sources._ = ['file', 'neosnippet']
'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
depends = ['roxma/nvim-yarp']
if = 'has("python3")'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]] # カッコの補完など
repo = 'cohama/lexima.vim'
on_i = 1

# ====================-
# Snipetts
# ====================-

# [[plugins]]
# repo = 'SirVer/ultisnips'
# on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
hook_add = '''

" key mappings
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" Enable snipMate compatibility feature.
let g:neosnippet#enable_snipmate_compatibility = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

# ====================-
# Heavy Plugins
# ====================-

# [[plugins]] # for life log
# repo = 'wakatime/vim-wakatime'
# on_event = 'InsertEnter' #InsertEnter = 挿入モードを開始したとき

