# ====================n
# Package Manager
# ====================-

[[plugins]]
repo = 'Shougo/dein.vim'
if = 'has("python3")'

# ====================-
# FileTree
# ====================-

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''

" key mappings
nnoremap <silent><C-e> :NERDTreeToggle<CR>

" nerdtree icon settings
let g:NERDTreeShowHidden = 1 " 隠しフォルダを表示する
let g:NERDTreeShowBookmarks=1 " ブックマークを初期表示
let g:NERDTreeWinSize=35 " 表示横幅
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'
let NERDTreeIgnore =
            \ ['\.pyc', '\.git$', '\~$', '\.swo$', '\.hg', '\.svn', '\.bzr', '\.DS_Store']
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['scrooloose/nerdtree']
hook_add = '''
" NOTE: use ascii instead of utf-8
" see https://github.com/Xuyuanp/nerdtree-git-plugin/issues/34
let g:NERDTreeIndicatorMapCustom = {
      \ "Modified"  : "<MOD>",
      \ "Staged"    : "<STG>",
      \ "Untracked" : "<UTR>",
      \ "Renamed"   : "<RNM>",
      \ "Unmerged"  : "<UMG>",
      \ "Deleted"   : "<DEL>",
      \ "Dirty"     : "<DTY>",
      \ "Clean"     : "<CLN>",
      \ "Unknown"   : "<NEW>"
      \ }
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
depends = ['scrooloose/nerdtree']
hook_add = '''
" nerd tree webdev icon
let g:webdevicons_enable_nerdtree = 1
let g:WebDevIconsUnicodeGlyphDoubleWidth = 0
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' ' " アイコンのパディング
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 0
'''

# ====================-
# Sign column
# ====================-

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
" left git diff bar
let g:gitgutter_sign_added = '＋'
let g:gitgutter_sign_modified = '＞'
let g:gitgutter_sign_removed = 'ー'
" 500だと保存時エラーが出るのため
let g:gitgutter_max_signs = 1000
'''

# ====================-
# StatusBar
# ====================-

[[plugins]]
repo = 'bling/vim-airline'
hook_add = '''
" NOTE: I copied this from settngs see :h airline
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" powerline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.dirty = '⚡'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
" statusline
let g:airline_theme = 'solarized'
let g:airline#extensions#hunks#enabled=1
let g:airline#extensions#branch#enabled=1

" tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_splits = 1
let g:airline#extensions#tabline#show_buffers = 0 " タブにバッファ表示しない
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
'''

# ====================-
# Appearance
# ====================-

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_auto_colors=0
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_guide_size=1 " ガイドの幅
let g:indent_guides_color_change_percent = 10

autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd   ctermbg=darkgrey
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven  ctermbg=grey
'''

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
" Solarized
let g:solarized_termcolors=256
let g:solarized_termtrans=1
let g:solarized_degrade = 0
let g:solarized_bold = 1
let g:solarized_underline = 1
let g:solarized_italic = 1
let g:solarized_contrast = 'normal'
let g:solarized_visibility = 'normal'
colorscheme solarized
'''

# ====================-
# Tools
# ====================-

[[plugins]] # for comment out
repo = 'tyru/caw.vim'
hook_add = '''
" key mappings
" コメントアウト用(tabもしくはC-iでコメントout)
nmap <C-i> <Plug>(caw:hatpos:toggle)
vmap <C-i> <Plug>(caw:hatpos:toggle)
'''

# ====================-
# Syntax checker
# ====================-

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_echo_msg_format = '%severity%: %linter%: %s'
let g:ale_sign_column_always = 1
let g:ale_sign_error = 'E '
let g:ale_sign_warning = 'W '
let g:ale_fix_on_save = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0  " i don't want linters to run on opening a file
let g:ale_statusline_format = ['  %d', '  %d', '  ']
let g:ale_linters = {
      \ 'c': [ 'cppcheck' ],
      \ 'python': ['flake8'],
      \ 'go': [ 'gofmt', 'go vet', 'golint' ],
      \ 'javascript': [ 'eslint' ],
      \ 'jsx': [ 'eslint' ],
      \ 'css': [ 'stylelint' ],
      \ 'html': ['htmlhint'],
      \ }
let g:ale_fixers = {
    \ 'python': ['autopep8', 'black', 'isort'],
    \ }
" For Python
" pip install -U flake8 autopep8 black isort
'''


# ====================-
# LSP and complete
# ====================-

[[plugins]]
repo = 'prabirshrestha/async.vim'
hook_add = '''
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_diagnostics_enabled = 0

" NEED: pip install -U python-language-server
" python
if executable('pyls')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ })
endif
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
