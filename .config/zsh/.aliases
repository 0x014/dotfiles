#!/bin/sh

# Command shortcut
alias a="ag --hidden --ignore .git"
alias b='bat'
alias c='cd'
alias d='docker'
alias e='emacs'
alias se='sudoedit'
alias f='fuck'
alias g='git'
alias h='history'
alias i="whoami"
# alias j='autojump' # https://github.com/wting/autojump/issues/494
alias k='kill'
alias l='runls'
alias m='. ranger' # https://github.com/ranger/ranger/wiki/Integration-with-other-programs#changing-directories
alias n='nautilus'
alias o='xdg-open'
alias p='python'
alias q='exit'
alias r='R'
alias s='screen'
alias t='tig' # cui for task
alias u='du -hs' # directory size
alias v='vim'
alias w='w'
alias x='ex'
alias y='yes'
alias z='zsh'

alias zen='python -m this'

runls() {
  if hash lsd 2>/dev/null; then
      lsd -la --group-dirs=first "$@"
    else
      LC_COLLATE=C ls -al --color=auto --human-readable --group-directories-first "$@"
   fi
}

runless() {
    if hash bat 2>/dev/null; then
        bat "$@"
    else
        $PAGER "$@"
    fi
}

# FZF alias
source ~/dotfiles/scripts/fzf.sh

# Others
alias free='free -h'
alias py='python'
alias pe='pipenv'
alias le='less'
alias copy='echo ${PWD} | xsel -b'
alias ssh-igk='ssh -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no'


if [[ $SHELL == "/bin/zsh" ]]; then
  # Global aliases
  alias -g G='| grep --color'
  alias -g L='| less'
  alias -g H='| head'
  alias -g T='| tail'
  alias -g P='| peco'

  # Suffix aliases
  alias -s {c,py,cpp,r,rb,go,js,jsx,ts,java,sql,hs,md,sh,sh,rs,php}='vim'
  alias -s {xml,json,toml,yaml,yml,ini,conf,log}='vim'
  alias -s {png,jpg,bmp,PNG,JPG,BMP}='sxiv'
  alias -s mp3='mplayer'
  alias -s html='google-chrome-stable'
  alias -s {gz,tgz,zip,lzh,bz2,tbz,Z,tar,arj,xz,7z}='extract'
  alias -s deb='sudo gdebi' # dpkg -i だと依存関係解決してくれないため
fi

# permission
alias 644='chmod 644'
alias 755='chmod 755'
alias 777='chmod 777'

# typo
alias gl='g l'
alias gs='g s'
alias gd='g d'
alias ll='l'

# Color
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias less='less -R'
alias gitwatch='fswatch -0 . | xargs -0 -n 1 sh -c "clear && git status --short"' # to need to install fswatch

# # Others
alias rename='mv'
alias open='xdg-open'
alias music='vimpc'
alias reboot='reboot'
alias shutdown='shutdown -h now'
alias suspend='systemctl suspend'
alias lock='i3lock -c 000000'
alias search='chromium-browser --app="https://google.com/"' # search

# Shell
alias bsh='bash'
alias zsh='zsh'
alias msh='mosh'
alias psh='parallel-ssh'
alias tsh='tasksh' # for task
alias vsh='virsh' # KVM

eigo() {
  case $1 in
    e) shift; waei -ce "$@";;
    *) waei -c "$@";;
  esac
}

sshcfg() {
  case $1 in
    ls) ssh-add -l;;
    a|add) ssh-add ~/.ssh/id_rsa;;
    c|copy) # to add pub key to .ssh/authorized_keys in host
      shift; ssh-copy-id -i ~/.ssh/id_rsa.pub "$@";;
    alive) eval `ssh-agent`;;
    s|springboard) shift; ssh -A "$@" ;;
    g|generate) ssh-keygen -t rsa;;
    d|delete) # delete host from known_hosts
      shift; ssh-keygen -R "$@";;
    c|check) # check private key from host
      shift; ssh-keyscan "$@";;
    h) declare -f sshcfg;;
    *) echo 'worng subcommand found';;
  esac
}

show() {
  case $1 in
    g|group) cat /etc/group;;
    k|kernel) uname -a;;
    u|user) whoami;;
    o|os) cat /etc/lsb-release;;
    s|spec) neofetch;;
    ip) dig $2;;
    owner) whois $2;;
    t|tree) tree -N $2;;
    m|memory) free -h;;
    f|file)
      shift;
      file "$@"
      file -i "$@"
      wc "$@"
      md5sum "$@"
      du -h "$@"
      ;;
    h) declare -f show;;
    *) echo 'worng subcommand found';;
  esac
}

screen() {
  case $1 in
    ls) command screen -ls;;
    d|detach)
      shift
      command screen -d "$@";;
    a|attach)
      shift
      command screen -r "$@";;
    r|reattach) command screen -R;;
    f|force-attach)
      shift
      command screen -d -r "$@";;
    rm) command screen -wipe;;
    rm-detached)
      screen -ls | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs -I{} screen -S {} -X quit
      killall cmatrix;;
    h) declare -f screen;;
    *) command screen "$@";;
  esac
}

pet() {
  case $1 in
    a|n) # new or add
      shift
      command pet new "$@";;
    l|ls) # list
      shift
      command pet list "$@";;
    e|m) # edit or modify
      shift
      command pet edit "$@";;
    x) # need to instal peco
      shift
      command pet exec "$@";;
    h) declare -f pet;;
    *) command pet "$@";;
  esac
}

# VirtualBox
alias vbm='vboxmanage'
alias vbh='vboxheadless'
vbox() {
  case $1 in
    ls)
      echo "[all]"
      command vboxmanage list vms
      echo "[running]"
      command vboxmanage list runningvms;;
    save) # save state
      shift
      command vboxmanage controlvm $1 savestate;;
    start) # detachable start
      shift
      command vboxmanage startvm --type separate $1;;
    h) declare -f vbox;;
    *) command vboxmanage "$@";;
  esac
}

# Vagrant
alias vg='vagrant'
vagrant() {
  case $1 in
    i) command vagrant init;;
    u|run) command vagrant up;;
    s|ls) command vagrant status;;
    ss)
      case $2 in
        h) command vagrant snapshot push;;
        p) command vagrant snapshot push;;
        s) command vagrant snapshot save $3;;
        r) command vagrant snapshot restore $3;;
        ls) command vagrant snapshot list;;
        *) command vagrant "$@";;
      esac
      ;;
    h|ssh) command vagrant ssh;;
    l|reload) command vagrant reload;;
    h) declare -f vagrat;;
    *) command vagrant "$@";;
  esac
}

# docker subcommand aliases
docker() {
  case $1 in
    ps)
      shift
      command docker ps "$@";; # -a
    i)
      shift
      command docker images "$@";;
    v)
      shift
      command docker volume "$@";;
    b) docker build -t ${1:-dot} $HOME/dotfiles/. ;;
    r)
      WS_DIR="${HOME}/workspace"
      mkdir -p $WS_DIR # NOTE: need to make share directory in host before using cmd below coz its owner will be root.
      CONTAINER_ID=$(docker run -it -d --name $1 -v $WS_DIR:$WS_DIR ${2:-dot});;
      # docker attach --sig-proxy=false --detach-keys "ctrl-\\" $CONTAINER_ID;;
    c)
      NEW_TAG=$(docker images | awk -v img_name="${2:-dot}" '($1 == img_name) {print $2 += .01; exit}')
      docker commit ${1:-app} ${2:-dot}:$NEW_TAG;;
    a) docker attach --sig-proxy=false --detach-keys "ctrl-\\" $1;;
    s)
      shift
      docker start $1 "$@";;
    p)
      shift
      docker stop $1 "$@";;
    x)
      docker exec -it $1 bash;;
    rmc-all) docker rm $(docker ps --all --quiet) -f;;
    rmi-all) docker rmi $(docker images --quiet) -f;;
    rmv-all) docker volume rm `docker volume ls -q -f dangling=true`;;
    h) declare -f docker;;
    *) command docker "$@";;
  esac
}

alias dc="docker-compose"

# mac sshfs
# alias blogfs='sshfs blog: ~/mp/blog -oauto_cache,reconnect,defer_permissions,negative_vncache,noappledouble,volname=blog'
# alias kaishafs='sshfs kaisha: ~/mp/kaisha -oauto_cache,reconnect,defer_permissions,negative_vncache,noappledouble,volname=kaisha'

# NOTE: it needs to add suffix alias above if u add new pattern.
extract() {
  case $1 in
    *.tar.gz|*.tgz) tar xzvf $1;;
    *.tar.xz) tar Jxvf $1;;
    *.zip) unzip $1;;
    *.lzh) lha e $1;;
    *.tar.bz2|*.tbz) tar xjvf $1;;
    *.tar.Z) tar zxvf $1;;
    *.gz) gzip -d $1;;
    *.bz2) bzip2 -dc $1;;
    *.Z) uncompress $1;;
    *.tar) tar xvf $1;;
    *.arj) unarj $1;;
    *.rar) unrar x $1;;
    *.7z) 7z x $1;;
  esac
}

