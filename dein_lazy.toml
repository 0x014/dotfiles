# ====================-
# Heavy Plugins
# ====================-

[[plugins]] # for life log
repo = 'wakatime/vim-wakatime'
on_event = 'InsertEnter' #InsertEnter = 挿入モードを開始したとき

# ====================-
# C/C++
# ====================-

[[plugins]]
repo = "justmao945/vim-clang"
on_ft = ['c', 'cpp']
hook_add = '''
let g:clang_auto = 1
let g:clang_c_completeopt = 'menuone'
let g:clang_cpp_completeopt = 'menuone'
let g:clang_c_options = '-std=gnu11'
let g:clang_cpp_options = '-std=c++11 -stdlib=libc++'
'''

[[plugins]]
repo = "rhysd/vim-clang-format"
on_ft = ['c', 'cpp']
hook_add = '''
autocmd FileType c ClangFormatAutoEnable
'''

# ====================-
# Python
# ====================-

[[plugins]]
repo = "davidhalter/jedi-vim"
on_ft = ['python']
build = 'git submodule update --init'
hook_add = '''
let g:jedi#use_tabs_not_buffers = 1  " 補完で次の候補に進むときにtabを使えるという設定にしたつもりですができませんでした。
let g:jedi#popup_select_first = 0             " 1個目の候補が入力されるっていう設定を解除
let g:jedi#popup_on_dot = 0                   " .を入力すると補完が始まるという設定を解除
let g:jedi#goto_command = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = ""
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#rename_command = "<leader>R" " quick-runと競合しないように大文字Rに変更. READMEだと<leader>r
'''

# [[plugins]]
# repo = "zchee/deoplete-jedi"
# on_ft = ['python']
# build = 'git submodule update --init'

# ====================-
# Haskell
# ====================-

# [[plugins]]
# repo = "dag/vim2hs"
# on_ft = ['haskell']


# ====================-
# GO
# ====================-

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
on_i = 1
hook_add = '''
let g:go_fmt_command = "goimports" " save hook process in go-vim, neet to install goimports
" let g:syntastic_go_checkers = ['gofmt', 'golint', 'govet']

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_structs = 1

let g:go_def_mapping_enabled=0 " タブ移動の時にnvimでうるさいから
'''

# [[plugins]]
# repo = 'zchee/deoplete-go'
# on_ft = 'go'
# on_i = 1

# [[plugins]]
# repo = 'Blackrush/vim-gocode'
# on_ft = 'go'

# ====================-
# Rust
# ====================-

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'rhysd/rust-doc.vim'
on_ft = 'rust'

# ====================-
# Perl
# ====================-

[[plugins]]
repo = 'vim-perl/vim-perl'
on_ft = ['perl']

# ====================-
# Ruby/RoR
# ====================-

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby']

# ====================-
# TS
# ====================-

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'ts', 'tsx']

# [[plugins]]
# repo = 'Quramy/tsuquyomi'
# on_ft = ['typescript', 'ts', 'tsx']

# [[plugins]]
# repo = 'mhartington/nvim-typescript'
# on_ft = ['typescript', 'ts', 'tsx']

# ====================-
# JS
# ====================-

# NOTE: Don't enable it because of infinity loop
# [[plugins]]
# repo = 'pangloss/vim-javascript' # jsインデントとシンタックスカラー
# on_ft = ['javascript', 'jsx']

[[plugins]]
repo = 'moll/vim-node' # gfでrequire移動用
on_ft = 'javascript'
hook_add = '''
" key mappings
" vim-node file jump
autocmd User Node
  \ if &filetype == "javascript" |
  \   nmap <buffer> <C-w>f <Plug>NodeVSplitGotoFile |
  \   nmap <buffer> <C-w><C-f> <Plug>NodeVSplitGotoFile |
  \ endif
'''

# [[plugins]]
# repo = 'mxw/vim-jsx'  # jsxのインデントとシンタックスハイライト, vim-javascriptに依存する
# on_ft = ['javascript', 'jsx']
# on_source = ['vim-javascript']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'  # jsxのシンタックスハイライトとインデント
on_ft = [ 'jsx']
on_source = ['vim-javascript']

# [[plugins]]
# repo  = 'ternjs/tern_for_vim'
# on_ft = ['javascript', 'jsx']
# build = 'npm install'
hook_add = '''
let g:jsx_ext_required = 1
let g:tern#command = ["tern"]
let g:tern#arguments = ["--persistent"]
let tern_show_argument_hints = 'on_move'
let tern_show_signature_in_pum = 1
let tern#is_show_argument_hints_enabled = 1
'''


# [[plugins]]
# repo  = 'carlitux/deoplete-ternjs'
# on_ft = ['javascript', 'jsx']
# build = 'npm install -g tern'

# [[plugins]]
# repo = 'heavenshell/vim-jsdoc' # jsdoc用
# on_ft = 'javascript'

[[plugins]]
repo = 'heavenshell/vim-jsdoc'

# ====================-
# CS
# ====================-

[[plugins]]
repo = 'kchmck/vim-coffee-script' # use npm coffeelint module
on_ft = 'coffee'

# ====================-
# JSON/CSON
# ====================-

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json', 'cson']
hook_add = '''
au BufNewFile,BufRead *.cson setf json
'''

# ====================-
# TOML
# ====================-

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# ====================-
# HTML
# ====================-

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

# ====================-
# Handlebars
# ====================-

[[plugins]]
repo = 'mustache/vim-mustache-handlebars' # hbs
on_ft = 'handlebars'

# ====================-
# CSS
# ====================-

[[plugins]]
repo = 'hail2u/vim-css3-syntax' # css
on_ft = 'css'

# ====================-
# Jade
# ====================-

[[plugins]]
repo = 'digitaltoad/vim-jade'  # jade
on_ft = 'jade'

# ====================-
# Less
# ====================-

[[plugins]]
repo = 'groenewege/vim-less' # less
on_ft = 'less'

# ====================-
# Yaml
# ====================-

[[plugins]]
repo = 'stephpy/vim-yaml' # yaml
on_ft = 'yaml'

# ====================-
# Tmux
# ====================-

[[plugins]]
repo = 'tmux-plugins/vim-tmux' # tmux.conf用
on_ft = 'tmux.conf'

