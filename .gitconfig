[user]
  name = mgoldchild
  email = mgoldchild@gmail.com
[diff]
  renames = true
[color]
  ui = auto
[alias]
  a = add # -all ., -p
  b = branch # -d, -D, -m, -v, -a, -r, -vv
  c = commit # merge commit, . --all, --amend
  d = diff # diff HEAD, diff, diff --cached, stat
  e = rebase # -i
  f = fetch --all
  g = merge
  h = push
  i = ls-files
  j = reset
  k = show-branch --merge-base
  l = log --graph --date=short --format='%C(yellow)%h%C(reset) %C(magenta)[%ad]%C(reset)%C(red)%d%C(reset) %s %C(cyan)@%an%C(reset)'
  m = mv
  n = clone # reflog
  o = checkout
  p = grep -n
  q = clean -fd # --dry-run
  r = rm # --cached
  s = status --short
  t = revert -m 1 # for mrege commit
  u = pull
  v = mv
  w = show
  x = stash list
  y = stash save -u
  z = stash apply

  mg = mergetool

  move = mv
  remove = rm

  prestage = diff -w --word-diff=color
  precommit = diff --cached -w --word-diff=color --word-diff-regex='[^[:space:]<>]+'

  sn = show --pretty="" --name-only
  ss = show --stat
  cn= diff --cached --pretty="" --name-only
  cs = diff --cached --stat
  dn= diff --pretty="" --name-only
  ds = diff --stat

  save = commit -m
  amend = commit --amend
  resave = commit --amend
  ignore = rm -r --cached . # need git add . and git commit after this cmd
  empty = commit --allow-empty --allow-empty-message
  clean-untracked = clean -f -d # remove untracked
  clean-change = git reset --hard # staged and working directory changes
  clean-all = clean -f -d -x # untracked and ignored files
  mylog = log --author=mgoldchild
  diff-stg = diff --cached

  # MEMO:
  # resolv conflict by rebase
  # git checkout working-branch
  # git rebase master
  # git add .
  # git rebase --continue

  delete = branch -D

  back = checkout "-"
  nevermind = !git reset --hard HEAD && git clean -d -f

  contributors = shortlog -s -n
  tags = tag

  stashes = stash list
  unshift = stash save -u
  shift= stash apply

  rewrite = rebase -i

  d1 = diff HEAD~            # HEADから1つ前とdiff
  d2 = diff HEAD~~           # HEADから2つ前とdiff
  d3 = diff HEAD~~~          # HEADから3つ前とdiff
  d4 = diff HEAD~~~~         # HEADから4つ前とdiff
  d5 = diff HEAD~~~~~        # HEADから5つ前とdiff
  d10 = diff HEAD~~~~~~~~~~  # HEADから10前とdiff

  global-list = config --global --list
  local-list = config --local --list

# git stash clear
# git fetch --prune
#
# blame -L
[core]
  autoCRLF = false
  safecrlf = true
  excludesfile = ~/.gitignore
  editor = vim
  quotepath = false # git status 日本語文字化けのため
[merge]
  tool = vimdiff
  ff = false # it means not to do FF. in other words, i always make a merge commit in merge
[mergetool]
  prompt = false
  keepBackup = false
  keepTemporaries = false
[push]
  default = simple

[credential]
  helper = store
[pull]
  ff = only # if FF is possible then it will execute
