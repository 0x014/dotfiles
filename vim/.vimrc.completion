" ====================
" Deoplete
" ====================
"
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#max_list = 1000

if !exists('g:deoplete#omni_patterns')
	let g:deoplete#omni_patterns = {}
endif
let g:deoplete#omni_patterns.go = '\h\w*\.\?'
" let g:deoplete#omni_patterns.javascript = '\h\w*\.\?'

" let g:deoplete#omni_patterns.jsx = '\h\w*\.\?'
" let g:deoplete#omni_patterns.typescript = '\h\w*\.\?'
" let g:deoplete#omni_patterns.tsx = '\h\w*\.\?'


" ====================
" NeoCompletecaceh
" ====================

" " for Neocomplecache
" let g:acp_enableAtStartup = 0
" " neocomplcacheを有効化
" let g:neocomplcache_enable_at_startup = 1
" " smarrt case有効化。 大文字が入力されるまで大文字小文字の区別を無視する
" let g:neocomplcache_enable_smart_case = 1
" " _(アンダーバー)区切りの補完を有効化
" let g:neocomplcache_enable_underbar_completion = 0
" " シンタックスをキャッシュするときの最小文字長を3に
" let g:neocomplcache_min_syntax_length = 3
" " -入力による候補番号の表示
" let g:neocomplcache_enable_quick_match = 1
" " 補完候補の一番先頭を選択状態にする(AutoComplPopと似た動作)
" let g:neocomplcache_enable_auto_select = 1
" "ポップアップメニューで表示される候補の数。初期値は100
" let g:neocomplcache_max_list = 20

" " Golang completion
" if !exists('g:neocomplcache_omni_patterns')
"   let g:neocomplcache_omni_patterns = {}
" endif
" let g:neocomplcache_omni_patterns.go = '\h\w*\.\?'

